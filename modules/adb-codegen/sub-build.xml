<?xml version="1.0"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements. See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership. The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<project name="adb-codegen-test-source-generate" default="main" basedir=".">
	<description>
        Generate source code for tests...
    </description>

	<target name="main">

		<property name="compiled.classes.dir" value="target/classes"/>
		<!-- Theres got to be a better way to do this -->
		<property name="schema.source.dir" value="test-resources/xsd"/>
		<property name="testsuite.source.dir" value="test-resources/testsuite"/>
		<property name="schema.output.base.dir" value="target/schema"/>
		<property name="schema.generated.src.dir" value="${schema.output.base.dir}/src"/>
		<property name="schema.generated.classes.dir" value="${schema.output.base.dir}/classes"/>
		<!-- make the dirs -->
		<mkdir dir="${schema.output.base.dir}"/>
		<mkdir dir="${schema.generated.src.dir}"/>
		<mkdir dir="${schema.generated.classes.dir}"/>
		<!-- Run schema compiler with designated schemas -->
		<echo>Compiling simple_maxOccurs2.xsd</echo>
		<!-- simple max occurs 2 xsd -->
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/simple_maxOccurs2.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<echo>Compiling anonymous_complexType.xsd</echo>
		<!-- anon complex type xsd -->
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/anonymous_complexType.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- anon choice xsd -->
		<echo>Compiling simple_choice.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/simple_choice.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- anon particle all xsd -->
		<echo>Compiling simple_particle_all.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/simple_particle_all.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- simple max occurs xsd -->
		<echo>Compiling simple_maxOccurs.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/simple_maxOccurs.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- simple any type xsd -->
		<echo>Compiling simple_anytype.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/simple_anytype.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>


		<!-- min occurs 0 xsd -->
		<echo>Compiling simple-minoccurs0.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/simple-minoccurs0.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- complex min occurs 0 xsd -->
		<echo>Compiling complex-minoccurs0.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/complex-minoccurs0.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<echo>Compiling simple-recursive-datatypes.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/simple-recursive-datatypes.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<echo>Compiling mixed_minoccus0.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/mixed_minoccus0.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- ################################################################### -->
		<!-- All simple primitive types xsd -->
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/simple/simpleType-All.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- All simple derived types xsd -->
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${schema.source.dir}/derived/derivedType-All.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling complete.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/complete.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling simpleExtension.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/extensions.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling union.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/union.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling all.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/all.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling enumeration.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/enumeration.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling restrictions.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/restrictions.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling choice.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/choice.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling list.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/list.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling element_references.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/element_references.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling innersequence_choice.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/innersequence_choice.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling testattribute.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/testattribute.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling boolean.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/boolean.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling particalMaxOccures.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/particalMaxOccures.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling innerParticles.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/innerParticles.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>


		<!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling default_namespaces.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/default_namespaces.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

        <!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling groups.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/groups.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>

        <!-- ################################################################### -->
		<!-- All simple derived types xsd -->
		<echo>Compiling base64binary.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/base64binary.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
        <echo>Compiling abstract.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/abstract.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
        <echo>Compiling decimal.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/decimal.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
        <echo>Compiling rampart.xsd</echo>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
			<jvmarg line="${maven.junit.jvmargs}"/>
			<classpath refid="maven.dependency.classpath"/>
			<classpath location="${compiled.classes.dir}"/>
			<arg file="${testsuite.source.dir}/rampart.xsd"/>
			<arg file="${schema.generated.src.dir}"/>
		</java>
    </target>

</project>
